Ian VanGordon
9/6/2023
QAA


Objectives:

    The objectives of this assignment are to use existing tools for quality assessment and adaptor trimming, compare the quality assessments to those from your own software, and to demonstrate your ability to summarize other important information about this RNA-Seq data set in a high-level report. That is, you should create a cohesive, well written report for your "PI" about what you've learned about/from your data.

This project will be broken into 3 main parts:

    1) Run fastqc on the R1 and R2 to understand the quality of the data

    2) Trim adapters that made it into the sequencing data

    3) Align sequences to genome and determine whether or not data was stranded


Part 1:

    I was assigned: 17_3E_fox_S13_L008 15_3C_mbnl_S11_L008 to analyze.
    The files are here on talapas: /projects/bgmp/shared/2017_sequencing/demultiplexed/ 
    They are compressed.

    Using my fastq_qscore_distribution.py script, running the first R1(17) file I got this output using /usr/bin/time:

        275.19user 0.34system 4:36.42elapsed 99%CPU (0avgtext+0avgdata 60584maxresident)k
        0inputs+0outputs (0major+14403minor)pagefaults 0swaps

        My python script worked on all of the files that I was assigned.


    Using fastqc:

        To load the module: module load fastqc/0.11.5

        Running 17_3E_fox_S13_L008_R1 I got the output :

            59.34user 2.59system 1:01.67elapsed 100%CPU (0avgtext+0avgdata 247956maxresident)k
            156712inputs+1784outputs (14major+53513minor)pagefaults 0swaps

    I separated the two sets of data by placing the fastqc files in a folder labeled PartOneA and my phred script outputs in PartOneB in the QAA directory.

    After reviewing the data for both sets of files, I do believe that the quality is up to par to be used in downstream analysis. The distributions from both methods were consistant and there was nothing that stood out as bad.
    Additionally, the duplication levels from the fastqc output all seemed to be very consistant with a peak at the >10 duplication level. Despite this, it is not enough to dismiss the data. 
    Some of the summary information does indicate that there are adapter sequences in the reads. These will have to be removed for further analysis. 



Part 2:

    Conda Environment:

        conda create -n QAA

        I created a conda env called QAA with the following packages installed:

            cutadapt version: 4.4
            trimmomatic version: 0.39

    cutadapt:

        usage:  cutadapt -a ADAPT1 -A ADAPT2 [options] -o out1.fastq -p out2.fastq in1.fastq in2.fastq

        command for first library: cutadapt -a AGATCGGAAGAGCACACGTCTGAACTCCAGTCA -A AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT -o "/projects/bgmp/ianvango/bioinfo/Bi623/QAA/PartTwoA/15R1.fastq" -p "/projects/bgmp/ianvango/bioinfo/Bi623/QAA/PartTwoA/15R2.fastq" "/projects/bgmp/shared/2017_sequencing/demultiplexed/15_3C_mbnl_S11_L008_R1_001.fastq.gz" "/projects/bgmp/shared/2017_sequencing/demultiplexed/15_3C_mbnl_S11_L008_R2_001.fastq.gz"

        command for second library: cutadapt -a AGATCGGAAGAGCACACGTCTGAACTCCAGTCA -A AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT -o "/projects/bgmp/ianvango/bioinfo/Bi623/QAA/PartTwoA/17R1.fastq" -p "/projects/bgmp/ianvango/bioinfo/Bi623/QAA/PartTwoA/17R2.fastq" "/projects/bgmp/shared/2017_sequencing/demultiplexed/17_3E_fox_S13_L008_R1_001.fastq.gz" "/projects/bgmp/shared/2017_sequencing/demultiplexed/17_3E_fox_S13_L008_R2_001.fastq.gz"

        All of the trimmed fastq files were trimmed and put into QAA/PartTwoA

    
    trimmomatic:

        usage: PE [-version] [-threads <threads>] [-phred33|-phred64] [-trimlog <trimLogFile>] [-summary <statsSummaryFile>] [-quiet] [-validatePairs] [-basein <inputBase> | <inputFile1> <inputFile2>] [-baseout <outputBase> | <outputFile1P> <outputFile1U> <outputFile2P> <outputFile2U>] <trimmer1>...

        command for first library: trimmomatic PE -phred33 "/projects/bgmp/ianvango/bioinfo/Bi623/QAA/PartTwoA/15R1.fastq" "/projects/bgmp/ianvango/bioinfo/Bi623/QAA/PartTwoA/15R2.fastq" "/projects/bgmp/ianvango/bioinfo/Bi623/QAA/PartTwoB/15R1.P.fq.gz" "/projects/bgmp/ianvango/bioinfo/Bi623/QAA/PartTwoB/15R1.U.fq.gz" "/projects/bgmp/ianvango/bioinfo/Bi623/QAA/PartTwoB/15R2.P.fq.gz" "/projects/bgmp/ianvango/bioinfo/Bi623/QAA/PartTwoB/15R2.U.fq.gz" LEADING:3 TRAILING:3 SLIDINGWINDOW:3:15 MINLEN:35

            output:

                Input Read Pairs: 7806403 Both Surviving: 7168671 (91.83%) Forward Only Surviving: 594705 (7.62%) Reverse Only Surviving: 23842 (0.31%) Dropped: 19185 (0.25%)
                TrimmomaticPE: Completed successfully


        command for second library: trimmomatic PE -phred33 "/projects/bgmp/ianvango/bioinfo/Bi623/QAA/PartTwoA/17R1.fastq" "/projects/bgmp/ianvango/bioinfo/Bi623/QAA/PartTwoA/17R2.fastq" "/projects/bgmp/ianvango/bioinfo/Bi623/QAA/PartTwoB/17R1.P.fq.gz" "/projects/bgmp/ianvango/bioinfo/Bi623/QAA/PartTwoB/17R1.U.fq.gz" "/projects/bgmp/ianvango/bioinfo/Bi623/QAA/PartTwoB/17R2.P.fq.gz" "/projects/bgmp/ianvango/bioinfo/Bi623/QAA/PartTwoB/17R2.U.fq.gz" LEADING:3 TRAILING:3 SLIDINGWINDOW:3:15 MINLEN:35

            output:

                The output was lost due to losing connection to the VPN after the program ran. To remedy this, part of my python script will output summary stats for the surviving reads (count of surviving reads).


    read_length_dis.py:

        I wrote a python script that works in my base environment and uses packages argparse, matplotlib, numpy, and gzip to generate plots that show the post-processesing read length distributions.
        This script can be found in PartTwoC.
        To run this script I used an sbatch script (PartTwoC/dist.sh) with the following parameters:

            #SBATCH --account=bgmp                    
            #SBATCH --partition=compute               
            #SBATCH --cpus-per-task=8                 
            #SBATCH --mem=32GB 

        slurm.out:

            51.55user 2.03system 0:53.33elapsed 100%CPU (0avgtext+0avgdata 2261848maxresident)k
            0inputs+0outputs (0major+1101933minor)pagefaults 0swaps
            79.05user 2.77system 1:21.45elapsed 100%CPU (0avgtext+0avgdata 3405320maxresident)k
            0inputs+0outputs (0major+1635985minor)pagefaults 0swaps